@page
@model Application.Pages.Orders.DetailsModel

@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        /* Page specific styles */
        .page-header {
            text-align: center;
            color: white;
            margin-bottom: 40px;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }

        .page-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 30px;
        }

        /* Order status header */
        .order-status-header {
            background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
            color: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(34, 197, 94, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .order-status-header h3 {
            margin-bottom: 10px;
            font-weight: 700;
            font-size: 1.5rem;
        }

        .order-status-header p {
            margin: 0;
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .order-id {
            font-family: 'Courier New', monospace;
            background: rgba(255, 255, 255, 0.2);
            padding: 4px 8px;
            border-radius: 6px;
            font-weight: 600;
        }

        /* Details container */
        .details-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 30px;
        }

        /* Order summary */
        .order-summary {
            text-align: center;
            margin-bottom: 40px;
            padding-bottom: 30px;
            border-bottom: 2px solid rgba(34, 197, 94, 0.1);
        }

        .price-display {
            font-size: 3rem;
            font-weight: 700;
            color: #059669;
            margin-bottom: 10px;
        }

        .price-currency {
            font-size: 1.5rem;
            color: #6b7280;
            margin-left: 8px;
        }

        .order-date {
            color: #4f46e5;
            font-weight: 600;
            font-size: 1.1rem;
        }

        /* Details grid */
        .details-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 30px;
            margin-bottom: 40px;
        }

        .detail-section {
            background: rgba(248, 250, 252, 0.8);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid rgba(226, 232, 240, 0.5);
        }

        .section-title {
            font-size: 1.2rem;
            font-weight: 700;
            color: #4f46e5;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
            padding-bottom: 10px;
            border-bottom: 2px solid rgba(79, 70, 229, 0.1);
        }

        .detail-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid rgba(226, 232, 240, 0.5);
        }

        .detail-item:last-child {
            border-bottom: none;
        }

        .detail-label {
            font-weight: 600;
            color: #6b7280;
            display: flex;
            align-items: center;
            gap: 8px;
            min-width: 120px;
        }

        .detail-value {
            font-weight: 500;
            color: #1f2937;
            text-align: right;
            flex: 1;
        }

        /* User info card */
        .user-info-card {
            display: flex;
            align-items: center;
            gap: 15px;
            background: rgba(255, 255, 255, 0.8);
            padding: 15px;
            border-radius: 12px;
            border: 1px solid rgba(226, 232, 240, 0.5);
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 1.2rem;
        }

        .user-details h4 {
            margin: 0 0 5px 0;
            color: #1f2937;
            font-weight: 600;
        }

        .user-details p {
            margin: 0;
            color: #6b7280;
            font-size: 0.9rem;
        }

        /* Doctor info card */
        .doctor-info-card {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            color: white;
            padding: 20px;
            border-radius: 15px;
            text-align: center;
        }

        .doctor-info-card h4 {
            margin-bottom: 10px;
            font-weight: 700;
        }

        .doctor-license {
            background: rgba(255, 255, 255, 0.2);
            padding: 8px 16px;
            border-radius: 20px;
            display: inline-block;
            font-weight: 600;
            font-family: 'Courier New', monospace;
        }

        /* Medical record card */
        .medical-record-card {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            color: white;
            padding: 20px;
            border-radius: 15px;
        }

        .medical-record-card h4 {
            margin-bottom: 15px;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .diagnosis-text {
            background: rgba(255, 255, 255, 0.2);
            padding: 12px;
            border-radius: 8px;
            font-weight: 500;
            line-height: 1.5;
        }

        /* Action buttons */
        .action-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn-action {
            padding: 14px 30px;
            border-radius: 12px;
            text-decoration: none;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 0.95rem;
        }

        .btn-medical {
            background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(139, 92, 246, 0.3);
        }

        .btn-medical:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(139, 92, 246, 0.4);
            color: white;
        }

        .btn-back {
            background: rgba(107, 114, 128, 0.1);
            color: #6b7280;
            border: 2px solid rgba(107, 114, 128, 0.2);
        }

        .btn-back:hover {
            background: rgba(107, 114, 128, 0.2);
            transform: translateY(-2px);
            color: #4b5563;
        }

        /* Payment status alerts */
        .payment-alert {
            padding: 15px 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 600;
        }

        .payment-success {
            background: rgba(34, 197, 94, 0.1);
            color: #16a34a;
            border: 1px solid rgba(34, 197, 94, 0.2);
        }

        .payment-cancelled {
            background: rgba(239, 68, 68, 0.1);
            color: #dc2626;
            border: 1px solid rgba(239, 68, 68, 0.2);
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .page-title {
                font-size: 2rem;
            }

            .details-container {
                padding: 20px;
            }

            .details-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .price-display {
                font-size: 2rem;
            }

            .action-buttons {
                flex-direction: column;
            }

            .detail-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 8px;
            }

            .detail-value {
                text-align: left;
            }

            .user-info-card {
                flex-direction: column;
                text-align: center;
            }
        }
    </style>
}

<div class="page-header">
    <h1 class="page-title">
        <i class="fas fa-receipt me-3"></i>
        Chi tiết đơn hàng
    </h1>
    <p class="page-subtitle">Thông tin chi tiết về đơn hàng và giao dịch</p>
</div>

@{
    var paymentSuccess = TempData["PaymentSuccess"] as string;
    var paymentCancelled = TempData["PaymentCancelled"] as string;
}

<!-- Payment Status Alerts -->
@if (!string.IsNullOrEmpty(paymentSuccess))
{
    <div class="payment-alert payment-success">
        <i class="fas fa-check-circle"></i>
        @paymentSuccess
    </div>
}

@if (!string.IsNullOrEmpty(paymentCancelled))
{
    <div class="payment-alert payment-cancelled">
        <i class="fas fa-times-circle"></i>
        @paymentCancelled
    </div>
}

<!-- Order Status Header -->
<div class="order-status-header">
    <h3>
        <i class="fas fa-check-circle me-2"></i>
        Đơn hàng đã hoàn thành
    </h3>
    <p>Mã đơn hàng: <span class="order-id">@Model.Order.Id.ToString().ToUpper()</span></p>
</div>

<div class="details-container">
    @if (Model.Order != null)
    {
        <!-- Order Summary -->
        <div class="order-summary">
            <div class="price-display">
                @Model.Order.TotalPrice.ToString("N0")
                <span class="price-currency">VNĐ</span>
            </div>
            <div class="order-date">
                <i class="fas fa-calendar me-2"></i>
                Ngày tạo: @Model.Order.CreateAt.ToString("dd/MM/yyyy HH:mm")
            </div>
        </div>

        <!-- Details Grid -->
        <div class="details-grid">
            <!-- Patient Information -->
            <div class="detail-section">
                <h3 class="section-title">
                    <i class="fas fa-user"></i>
                    Thông tin bệnh nhân
                </h3>
                
                <div class="user-info-card">
                    <div class="user-avatar">
                        @Model.Order.User.Username.Substring(0, 1).ToUpper()
                    </div>
                    <div class="user-details">
                        <h4>@Model.Order.User.Username</h4>
                        <p>@Model.Order.User.Email</p>
                    </div>
                </div>
            </div>

            <!-- Doctor Information -->
            <div class="detail-section">
                <h3 class="section-title">
                    <i class="fas fa-user-md"></i>
                    Bác sĩ điều trị
                </h3>
                
                <div class="doctor-info-card">
                    <h4>
                        <i class="fas fa-stethoscope me-2"></i>
                        Bác sĩ phụ trách
                    </h4>
                    <div class="doctor-license">
                        Mã số: @Model.Order.Doctor.LicenseNumber
                    </div>
                </div>
            </div>
        </div>

        <!-- Medical Record Section -->
        <div class="detail-section">
            <h3 class="section-title">
                <i class="fas fa-notes-medical"></i>
                Thông tin y tế
            </h3>
            
            <div class="medical-record-card">
                <h4>
                    <i class="fas fa-diagnoses"></i>
                    Chẩn đoán
                </h4>
                <div class="diagnosis-text">
                    @Model.Order.MedicalRecord.Diagnosis
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="action-buttons">
            <a asp-page="/MedicalRecords/Index" class="btn-action btn-medical">
                <i class="fas fa-file-medical"></i>
                Xem hồ sơ bệnh án
            </a>
            <a asp-page="./Index" class="btn-action btn-back">
                <i class="fas fa-arrow-left"></i>
                Quay lại danh sách
            </a>
        </div>
    }
    else
    {
        <div style="text-align: center; padding: 60px 20px; color: #6b7280;">
            <i class="fas fa-exclamation-triangle" style="font-size: 3rem; margin-bottom: 20px; opacity: 0.5;"></i>
            <h3>Không tìm thấy thông tin đơn hàng</h3>
            <p>Đơn hàng không tồn tại hoặc đã bị xóa.</p>
            <a asp-page="./Index" class="btn-action btn-back">
                <i class="fas fa-arrow-left"></i>
                Quay lại danh sách
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animate sections on load
            const sections = document.querySelectorAll('.detail-section, .order-summary');
            sections.forEach((section, index) => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    section.style.transition = 'all 0.6s ease';
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                }, index * 200);
            });

            // Animate order status header
            const statusHeader = document.querySelector('.order-status-header');
            if (statusHeader) {
                statusHeader.style.opacity = '0';
                statusHeader.style.transform = 'scale(0.9)';
                setTimeout(() => {
                    statusHeader.style.transition = 'all 0.8s ease';
                    statusHeader.style.opacity = '1';
                    statusHeader.style.transform = 'scale(1)';
                }, 100);
            }

            // Animate price display
            const priceDisplay = document.querySelector('.price-display');
            if (priceDisplay) {
                let currentValue = 0;
                const targetValue = parseInt(priceDisplay.textContent.replace(/[^\d]/g, ''));
                const duration = 2000;
                const increment = targetValue / (duration / 16);

                const animatePrice = () => {
                    currentValue += increment;
                    if (currentValue < targetValue) {
                        priceDisplay.childNodes[0].textContent = Math.floor(currentValue).toLocaleString();
                        requestAnimationFrame(animatePrice);
                    } else {
                        priceDisplay.childNodes[0].textContent = targetValue.toLocaleString();
                    }
                };

                setTimeout(animatePrice, 500);
            }

            // Add hover effects to info cards
            const infoCards = document.querySelectorAll('.user-info-card, .doctor-info-card, .medical-record-card');
            infoCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'scale(1.02)';
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'scale(1)';
                });
            });
        });
    </script>
}
