@page
@model Application.Pages.Employees.IndexModel

@{
    ViewData["Title"] = "Quản lý Nhân viên";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        /* Page specific styles */
        .page-header {
            text-align: center;
            color: white;
            margin-bottom: 40px;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }

        .page-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 30px;
        }

        /* Action buttons */
        .action-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .btn-create {
            background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(34, 197, 94, 0.3);
        }

        .btn-create:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.4);
            color: white;
        }

        /* Table container */
        .table-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            overflow: hidden;
        }

        /* Custom table */
        .custom-table {
            width: 100%;
            border-collapse: collapse;
            background: transparent;
        }

        .custom-table thead th {
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            color: white;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            border: none;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .custom-table thead th:first-child {
            border-top-left-radius: 12px;
        }

        .custom-table thead th:last-child {
            border-top-right-radius: 12px;
        }

        .custom-table tbody tr {
            transition: all 0.3s ease;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .custom-table tbody tr:hover {
            background: rgba(79, 70, 229, 0.05);
            transform: scale(1.01);
        }

        .custom-table tbody td {
            padding: 15px;
            border: none;
            vertical-align: middle;
        }

        .custom-table tbody tr:last-child td:first-child {
            border-bottom-left-radius: 12px;
        }

        .custom-table tbody tr:last-child td:last-child {
            border-bottom-right-radius: 12px;
        }

        /* Action buttons in table */
        .action-buttons {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .btn-action {
            padding: 6px 12px;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.8rem;
            font-weight: 500;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }

        .btn-edit {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            color: white;
        }

        .btn-edit:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
            color: white;
        }

        .btn-details {
            background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
            color: white;
        }

        .btn-details:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(139, 92, 246, 0.4);
            color: white;
        }

        .btn-delete {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
        }

        .btn-delete:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
            color: white;
        }

        /* Status badge */
        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-active {
            background: rgba(34, 197, 94, 0.1);
            color: #16a34a;
        }

        .status-inactive {
            background: rgba(239, 68, 68, 0.1);
            color: #dc2626;
        }

        /* Role badge */
        .role-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            background: rgba(79, 70, 229, 0.1);
            color: #4f46e5;
        }
    </style>
}

<div class="page-header">
    <h1 class="page-title">
        <i class="fas fa-users me-3"></i>
        Quản lý Nhân viên
    </h1>
    <p class="page-subtitle">Danh sách tất cả nhân viên trong hệ thống</p>
</div>

<div class="action-bar">
    <div>
        <a asp-page="Create" class="btn-create">
            <i class="fas fa-plus"></i>
            Thêm nhân viên mới
        </a>
    </div>
</div>

<div class="table-container">
    @if (Model.Employee != null && Model.Employee.Any())
    {
        <table class="custom-table">
            <thead>
                <tr>
                    <th><i class="fas fa-user me-2"></i>Họ</th>
                    <th><i class="fas fa-user me-2"></i>Tên</th>
                    <th><i class="fas fa-envelope me-2"></i>Email</th>
                    <th><i class="fas fa-phone me-2"></i>Điện thoại</th>
                    <th><i class="fas fa-map-marker-alt me-2"></i>Địa chỉ</th>
                    <th><i class="fas fa-calendar me-2"></i>Ngày sinh</th>
                    <th><i class="fas fa-venus-mars me-2"></i>Giới tính</th>
                    <th><i class="fas fa-toggle-on me-2"></i>Trạng thái</th>
                    <th><i class="fas fa-user-tag me-2"></i>Vai trò</th>
                    <th><i class="fas fa-cogs me-2"></i>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Employee)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                        <td>@Html.DisplayFor(modelItem => item.Address)</td>
                        <td>@item.DateOfBirth.ToString("dd/MM/yyyy")</td>
                        <td>
                            @if (item.Gender == "Male")
                            {
                                <span><i class="fas fa-mars text-primary me-1"></i>Nam</span>
                            }
                            else
                            {
                                <span><i class="fas fa-venus text-danger me-1"></i>Nữ</span>
                            }
                        </td>
                        <td>
                            @if (item.Status == "Active")
                            {
                                <span class="status-badge status-active">
                                    <i class="fas fa-check-circle me-1"></i>Hoạt động
                                </span>
                            }
                            else
                            {
                                <span class="status-badge status-inactive">
                                    <i class="fas fa-times-circle me-1"></i>Không hoạt động
                                </span>
                            }
                        </td>
                        <td>
                            <span class="role-badge">
                                <i class="fas fa-user-tag me-1"></i>
                                @Html.DisplayFor(modelItem => item.User.Role.Name)
                            </span>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <a asp-page="./Edit" asp-route-id="@item.Id" class="btn-action btn-edit">
                                    <i class="fas fa-edit me-1"></i>Sửa
                                </a>
                                <a asp-page="./Details" asp-route-id="@item.Id" class="btn-action btn-details">
                                    <i class="fas fa-eye me-1"></i>Chi tiết
                                </a>
                                <a asp-page="./Delete" asp-route-id="@item.Id" class="btn-action btn-delete">
                                    <i class="fas fa-trash me-1"></i>Xóa
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="empty-state">
            <i class="fas fa-users"></i>
            <h3>Chưa có nhân viên nào</h3>
            <p>Hiện tại chưa có nhân viên nào trong hệ thống.</p>
            <a asp-page="Create" class="btn-create">
                <i class="fas fa-plus"></i>
                Thêm nhân viên đầu tiên
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Add some interactive effects
        document.addEventListener('DOMContentLoaded', function() {
            // Animate table rows on load
            const rows = document.querySelectorAll('.custom-table tbody tr');
            rows.forEach((row, index) => {
                row.style.opacity = '0';
                row.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    row.style.transition = 'all 0.5s ease';
                    row.style.opacity = '1';
                    row.style.transform = 'translateY(0)';
                }, index * 100);
            });

            // Add click effect to action buttons
            const actionBtns = document.querySelectorAll('.btn-action');
            actionBtns.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    // Create ripple effect
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.cssText = `
                        position: absolute;
                        width: ${size}px;
                        height: ${size}px;
                        left: ${x}px;
                        top: ${y}px;
                        background: rgba(255, 255, 255, 0.5);
                        border-radius: 50%;
                        transform: scale(0);
                        animation: ripple 0.6s linear;
                        pointer-events: none;
                    `;
                    
                    this.style.position = 'relative';
                    this.style.overflow = 'hidden';
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });
        });
    </script>

    <style>
        @@keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    </style>
}
