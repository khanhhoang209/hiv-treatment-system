@page
@model Application.Pages.Doctors.IndexModel
@{
    ViewData["Title"] = "Quản lý Bác sĩ";
    Layout = "_Layout";
}

@section Styles {
    <style>
        /* Page specific styles */
        .page-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .search-box {
            display: flex;
            gap: 10px;
            align-items: center;
            flex: 1;
            max-width: 400px;
        }

        .search-input {
            flex: 1;
            padding: 10px 15px;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 0.9rem;
        }

        .search-input:focus {
            outline: none;
            border-color: #4f46e5;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .btn-search {
            padding: 10px 20px;
            background: #6b7280;
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-search:hover {
            background: #4b5563;
            transform: translateY(-1px);
        }

        .stats-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card-small {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .stat-card-small:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

        .stat-icon-small {
            font-size: 1.5rem;
            margin-bottom: 10px;
        }

        .stat-number-small {
            font-size: 1.5rem;
            font-weight: 700;
            color: #1f2937;
            display: block;
        }

        .stat-label-small {
            font-size: 0.8rem;
            color: #6b7280;
            margin-top: 5px;
        }

        .specialization-badge {
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            background: #dcfce7;
            color: #166534;
        }

        .license-badge {
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            background: #dbeafe;
            color: #1e40af;
        }

        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 0.8rem;
            border-radius: 8px;
        }

        .table-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            overflow-x: auto;
        }

        .doctor-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 1.2rem;
        }
    </style>
}

<!-- Page Header -->
<div class="page-header">
    <h1 class="page-title">
        <i class="fas fa-user-md me-3"></i>Quản lý Bác sĩ
    </h1>
    <p class="page-subtitle">Quản lý thông tin bác sĩ trong hệ thống HIV Treatment</p>
</div>

<!-- Stats Cards -->
<div class="stats-row">
    <div class="stat-card-small">
        <i class="fas fa-user-md stat-icon-small" style="color: #10b981;"></i>
        <span class="stat-number-small">@(Model.Doctor?.Count() ?? 0)</span>
        <div class="stat-label-small">Tổng bác sĩ</div>
    </div>
    <div class="stat-card-small">
        <i class="fas fa-stethoscope stat-icon-small" style="color: #4f46e5;"></i>
        <span class="stat-number-small">@(Model.Doctor?.GroupBy(d => d.Specialization).Count() ?? 0)</span>
        <div class="stat-label-small">Chuyên khoa</div>
    </div>
    <div class="stat-card-small">
        <i class="fas fa-certificate stat-icon-small" style="color: #f59e0b;"></i>
        <span class="stat-number-small">@(Model.Doctor?.Count(d => !string.IsNullOrEmpty(d.LicenseNumber)) ?? 0)</span>
        <div class="stat-label-small">Có chứng chỉ</div>
    </div>
    <div class="stat-card-small">
        <i class="fas fa-user-check stat-icon-small" style="color: #06b6d4;"></i>
        <span class="stat-number-small">@(Model.Doctor?.Count(d => d.Employee?.Status == "Active") ?? 0)</span>
        <div class="stat-label-small">Đang hoạt động</div>
    </div>
</div>

<!-- Page Actions -->
<div class="content-card">
    <div class="page-actions">
        <div class="search-box">
            <input type="text" class="search-input" placeholder="Tìm kiếm theo tên, chuyên khoa..." id="searchInput">
            <button class="btn-search" onclick="searchDoctors()">
                <i class="fas fa-search me-1"></i>Tìm kiếm
            </button>
        </div>
        <a href="@Url.Page("./Create")" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Thêm bác sĩ mới
        </a>
    </div>
</div>

<!-- Doctors Table -->
<div class="table-container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4><i class="fas fa-list me-2"></i>Danh sách bác sĩ</h4>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-secondary btn-sm" onclick="exportData()">
                <i class="fas fa-download me-1"></i>Xuất Excel
            </button>
            <button class="btn btn-outline-primary btn-sm" onclick="refreshData()">
                <i class="fas fa-sync-alt me-1"></i>Làm mới
            </button>
        </div>
    </div>

    @if (Model.Doctor != null && Model.Doctor.Any())
    {
        <div class="table-responsive">
            <table class="table" id="doctorsTable">
                <thead>
                    <tr>
                        <th><i class="fas fa-user me-1"></i>Thông tin bác sĩ</th>
                        <th><i class="fas fa-stethoscope me-1"></i>Chuyên khoa</th>
                        <th><i class="fas fa-certificate me-1"></i>Số chứng chỉ</th>
                        <th><i class="fas fa-envelope me-1"></i>Email</th>
                        <th><i class="fas fa-phone me-1"></i>Số điện thoại</th>
                        <th><i class="fas fa-toggle-on me-1"></i>Trạng thái</th>
                        <th><i class="fas fa-cogs me-1"></i>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Doctor)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="doctor-avatar me-3">
                                        @if (!string.IsNullOrEmpty(item.Employee?.FirstName))
                                        {
                                            @item.Employee.FirstName.Substring(0, 1)@item.Employee.LastName?.Substring(0, 1)
                                        }
                                        else
                                        {
                                            <i class="fas fa-user-md"></i>
                                        }
                                    </div>
                                    <div>
                                        <strong>@Html.DisplayFor(modelItem => item.Employee.FirstName) @Html.DisplayFor(modelItem => item.Employee.LastName)</strong>
                                        <br><small class="text-muted">ID: @item.Id.ToString().Substring(0, 8)...</small>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="specialization-badge">
                                    @Html.DisplayFor(modelItem => item.Specialization)
                                </span>
                            </td>
                            <td>
                                <span class="license-badge">
                                    @Html.DisplayFor(modelItem => item.LicenseNumber)
                                </span>
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Employee.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Employee.Phone)</td>
                            <td>
                                @{
                                    var statusClass = item.Employee?.Status == "Active" ? "status-active" : "status-inactive";
                                }
                                <span class="status-badge @statusClass">
                                    @Html.DisplayFor(modelItem => item.Employee.Status)
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="@Url.Page("./Details", new { id = item.Id })" class="btn btn-info btn-sm" title="Xem chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="@Url.Page("./Edit", new { id = item.Id })" class="btn btn-warning btn-sm" title="Chỉnh sửa">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Page("./Delete", new { id = item.Id })" class="btn btn-danger btn-sm" title="Xóa" onclick="return confirm('Bạn có chắc chắn muốn xóa bác sĩ này?')">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-user-md fa-4x text-muted mb-3"></i>
            <h5 class="text-muted">Chưa có bác sĩ nào</h5>
            <p class="text-muted">Nhấn nút "Thêm bác sĩ mới" để bắt đầu.</p>
            <a href="@Url.Page("./Create")" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Thêm bác sĩ đầu tiên
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Search functionality
        function searchDoctors() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const table = document.getElementById('doctorsTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (let i = 0; i < rows.length; i++) {
                const row = rows[i];
                const cells = row.getElementsByTagName('td');
                let found = false;

                // Search in doctor name, specialization, email
                for (let j = 0; j < 4; j++) {
                    if (cells[j] && cells[j].textContent.toLowerCase().includes(searchTerm)) {
                        found = true;
                        break;
                    }
                }

                row.style.display = found ? '' : 'none';
            }
        }

        // Enter key support for search
        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchDoctors();
            }
        });

        // Export functionality
        function exportData() {
            alert('Chức năng xuất Excel sẽ được triển khai sau.');
        }

        // Refresh functionality
        function refreshData() {
            window.location.reload();
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Animate stat cards on load
            const statCards = document.querySelectorAll('.stat-card-small');
            statCards.forEach((card, index) => {
                setTimeout(() => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    card.style.transition = 'all 0.5s ease';
                    
                    setTimeout(() => {
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, 100);
                }, index * 100);
            });
        });

        // Confirm delete with better UX
        document.querySelectorAll('.btn-danger').forEach(button => {
            button.addEventListener('click', function(e) {
                if (!confirm('⚠️ Cảnh báo!\n\nBạn có chắc chắn muốn xóa bác sĩ này?\nHành động này không thể hoàn tác.')) {
                    e.preventDefault();
                }
            });
        });
    </script>
}
